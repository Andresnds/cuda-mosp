Solving by Dynamic Programming...
buffer: Instance 50
numCustomers: 10
numProducts: 6
0 1 0 0 1 0 
1 1 1 1 1 0 
1 1 1 1 0 0 
0 1 0 1 1 1 
1 1 1 0 1 0 
1 0 0 1 0 1 
1 1 1 1 1 1 
0 1 0 1 1 1 
1 1 1 1 1 1 
1 1 1 1 1 1 
Best Sequence: 
4 1 5 3 2 0 
1 1 0 0 0 0 
1 1 0 1 1 1 
0 1 0 1 1 1 
1 1 1 1 0 0 
1 1 0 0 1 1 
0 0 1 1 0 1 
1 1 1 1 1 1 
1 1 1 1 0 0 
1 1 1 1 1 1 
1 1 1 1 1 1 
OpenStacks: 9
Took 0 seconds

buffer: Instance 51
numCustomers: 10
numProducts: 6
1 0 0 0 1 1 
1 1 1 1 1 0 
1 1 0 1 0 0 
0 1 1 0 1 1 
1 1 1 1 1 1 
1 0 1 1 1 1 
1 1 1 1 1 1 
1 0 1 1 1 1 
1 1 1 1 0 1 
1 1 0 1 1 0 
Best Sequence: 
5 4 3 2 1 0 
1 1 0 0 0 1 
0 1 1 1 1 1 
0 0 1 0 1 1 
1 1 0 1 1 0 
1 1 1 1 1 1 
1 1 1 1 0 1 
1 1 1 1 1 1 
1 1 1 1 0 1 
1 0 1 1 1 1 
0 1 1 0 1 1 
OpenStacks: 10
Took 0 seconds

buffer: Instance 52
numCustomers: 10
numProducts: 6
1 1 1 1 1 1 
0 0 1 1 1 0 
1 1 1 1 1 1 
1 0 1 1 1 0 
1 1 1 1 1 1 
1 1 1 1 0 1 
1 1 1 1 1 0 
1 0 1 1 1 0 
1 0 0 1 0 0 
1 1 1 0 1 0 
Best Sequence: 
5 4 3 2 1 0 
1 1 1 1 1 1 
0 1 1 1 0 0 
1 1 1 1 1 1 
0 1 1 1 0 1 
1 1 1 1 1 1 
1 0 1 1 1 1 
0 1 1 1 1 1 
0 1 1 1 0 1 
0 0 1 0 0 1 
0 1 0 1 1 1 
OpenStacks: 10
Took 0 seconds

buffer: Instance 53
numCustomers: 10
numProducts: 6
1 0 1 1 0 1 
1 0 0 1 1 1 
0 1 1 1 1 1 
1 1 1 0 0 1 
1 1 1 0 0 0 
0 1 1 0 0 1 
0 1 1 1 1 1 
1 1 0 1 1 1 
1 0 1 1 1 1 
0 1 1 1 1 0 
Best Sequence: 
5 4 3 2 1 0 
1 0 1 1 0 1 
1 1 1 0 0 1 
1 1 1 1 1 0 
1 0 0 1 1 1 
0 0 0 1 1 1 
1 0 0 1 1 0 
1 1 1 1 1 0 
1 1 1 0 1 1 
1 1 1 1 0 1 
0 1 1 1 1 0 
OpenStacks: 10
Took 0 seconds

buffer: Instance 54
numCustomers: 10
numProducts: 6
0 1 1 1 1 1 
0 0 1 1 0 1 
1 1 1 1 0 0 
0 1 1 0 1 0 
0 1 0 1 1 1 
0 1 0 1 1 0 
1 1 1 0 1 1 
0 1 1 1 1 1 
1 1 1 0 1 1 
1 0 0 1 1 1 
Best Sequence: 
5 4 3 2 1 0 
1 1 1 1 1 0 
1 0 1 1 0 0 
0 0 1 1 1 1 
0 1 0 1 1 0 
1 1 1 0 1 0 
0 1 1 0 1 0 
1 1 0 1 1 1 
1 1 1 1 1 0 
1 1 0 1 1 1 
1 1 1 0 0 1 
OpenStacks: 10
Took 0 seconds

buffer: Instance 55
numCustomers: 10
numProducts: 6
1 1 1 1 1 0 
1 0 1 1 0 1 
1 0 1 1 0 1 
0 1 1 1 1 0 
0 1 1 1 1 1 
1 0 1 1 0 1 
1 0 1 1 0 0 
1 1 1 1 1 1 
1 1 1 0 0 1 
1 1 1 0 0 1 
Best Sequence: 
5 4 3 2 1 0 
0 1 1 1 1 1 
1 0 1 1 0 1 
1 0 1 1 0 1 
0 1 1 1 1 0 
1 1 1 1 1 0 
1 0 1 1 0 1 
0 0 1 1 0 1 
1 1 1 1 1 1 
1 0 0 1 1 1 
1 0 0 1 1 1 
OpenStacks: 10
Took 0 seconds

buffer: Instance 56
numCustomers: 10
numProducts: 6
0 1 1 1 1 1 
1 1 1 1 1 0 
1 0 1 1 1 1 
0 0 1 0 0 0 
0 1 1 1 1 1 
0 1 0 1 0 1 
1 0 1 1 0 1 
1 0 0 1 1 1 
1 0 1 0 1 1 
1 1 1 1 1 1 
Best Sequence: 
2 5 4 3 1 0 
1 1 1 1 1 0 
1 0 1 1 1 1 
1 1 1 1 0 1 
1 0 0 0 0 0 
1 1 1 1 1 0 
0 1 0 1 1 0 
1 1 0 1 0 1 
0 1 1 1 0 1 
1 1 1 0 0 1 
1 1 1 1 1 1 
OpenStacks: 9
Took 0 seconds

buffer: Instance 57
numCustomers: 10
numProducts: 6
0 1 1 0 1 1 
1 1 1 0 1 0 
1 0 1 0 1 1 
0 0 1 0 1 0 
1 0 0 1 0 1 
1 0 1 1 1 1 
1 0 1 1 1 1 
0 1 1 1 1 1 
0 1 0 1 0 1 
0 1 0 1 1 1 
Best Sequence: 
4 2 5 3 1 0 
1 1 1 0 1 0 
1 1 0 0 1 1 
1 1 1 0 0 1 
1 1 0 0 0 0 
0 0 1 1 0 1 
1 1 1 1 0 1 
1 1 1 1 0 1 
1 1 1 1 1 0 
0 0 1 1 1 0 
1 0 1 1 1 0 
OpenStacks: 9
Took 0.01 seconds

buffer: Instance 58
numCustomers: 10
numProducts: 6
0 1 1 1 1 1 
1 0 1 1 1 1 
1 1 0 1 1 1 
0 1 1 1 1 1 
0 1 1 1 1 1 
1 1 0 0 1 1 
0 0 0 1 1 0 
1 0 1 1 0 1 
1 1 1 1 1 1 
1 0 1 1 1 1 
Best Sequence: 
5 4 3 2 1 0 
1 1 1 1 1 0 
1 1 1 1 0 1 
1 1 1 0 1 1 
1 1 1 1 1 0 
1 1 1 1 1 0 
1 1 0 0 1 1 
0 1 1 0 0 0 
1 0 1 1 0 1 
1 1 1 1 1 1 
1 1 1 1 0 1 
OpenStacks: 10
Took 0 seconds

buffer: Instance 59
numCustomers: 10
numProducts: 6
1 1 1 1 1 1 
1 1 1 1 0 1 
1 0 0 1 1 1 
1 1 1 1 1 1 
0 0 1 1 1 1 
0 1 1 0 0 0 
1 0 1 1 1 0 
1 1 1 1 1 1 
0 0 1 1 0 1 
0 1 1 1 1 1 
Best Sequence: 
2 1 5 4 3 0 
1 1 1 1 1 1 
1 1 1 0 1 1 
0 0 1 1 1 1 
1 1 1 1 1 1 
1 0 1 1 1 0 
1 1 0 0 0 0 
1 0 0 1 1 1 
1 1 1 1 1 1 
1 0 1 0 1 0 
1 1 1 1 1 0 
OpenStacks: 9
Took 0 seconds

Solved: 10 instances
totalTime: 0.01 seconds
minTime: 0 seconds
maxTime: 0.01 seconds
Average: 0.001 seconds
